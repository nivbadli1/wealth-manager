generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Expense {
  id          String   @id @default(cuid())
  category    String
  amount      Float
  date        DateTime
  description String?
  createdAt   DateTime @default(now())
}

model Income {
  id          String   @id @default(cuid())
  source      String
  amount      Float
  date        DateTime
  description String?
  category    String
  createdAt   DateTime @default(now())
}

model Investment {
  id            String   @id @default(cuid())
  type          String
  name          String
  initialAmount Float
  currentValue  Float
  date          DateTime
  returnRate    Float?
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
}

model Mortgage {
  id             String   @id @default(cuid())
  propertyId     String
  bank           String
  originalAmount Float
  currentBalance Float
  monthlyPayment Float
  interestRate   Float
  startDate      DateTime
  createdAt      DateTime @default(now())
  updatedAt      DateTime @updatedAt
  Property       Property @relation(fields: [propertyId], references: [id], onDelete: Cascade)
}

model Property {
  id              String            @id @default(cuid())
  name            String
  address         String
  purchaseDate    DateTime
  purchasePrice   Float
  currentValue    Float
  propertyType    String
  status          String
  createdAt       DateTime          @default(now())
  updatedAt       DateTime          @updatedAt
  Mortgage        Mortgage[]
  PropertyExpense PropertyExpense[]
  RentalIncome    RentalIncome[]
}

model PropertyExpense {
  id          String   @id @default(cuid())
  propertyId  String
  category    String
  amount      Float
  date        DateTime
  description String?
  createdAt   DateTime @default(now())
  Property    Property @relation(fields: [propertyId], references: [id], onDelete: Cascade)
}

model RentalIncome {
  id         String   @id @default(cuid())
  propertyId String
  amount     Float
  date       DateTime
  tenantName String?
  notes      String?
  createdAt  DateTime @default(now())
  Property   Property @relation(fields: [propertyId], references: [id], onDelete: Cascade)
}
